#Master nodes k8s install
- name: Deploying k8s in Master node
  hosts: master
  become: yes
  gather_facts: false
  tasks:
  - name: Set hostname to identify host
    shell: |
      sudo hostnamectl set-hostname master

  - name: Disable swap
    shell: swapoff -a

  - name: enable ip packet forwarding
    shell: |
      echo "net.ipv4.ip_forward = 1" | sudo tee /etc/sysctl.d/k8s.conf
      sysctl --system

  - name: Update the system
    shell: sudo apt update && apt upgrade -y

  - name: Install containerd
    shell: sudo apt-get install containerd -y

  - name: Install container network cni plugin
    shell: |
      mkdir -p /opt/cni/bin
      wget https://github.com/containernetworking/plugins/releases/download/v1.7.1/cni-plugins-linux-amd64-v1.7.1.tgz
      tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.7.1.tgz

  - name: configure containerd
    shell: |
      mkdir /etc/containerd
      containerd config default > /etc/containerd/config.toml
      sed -i 's/^SystemdCgroup\s*=\s*false/SystemdCgroup = true/' /etc/containerd/config.toml
      systemctl restart containerd

  - name: To add k8s repos and install tools
    shell: |
      sudo apt-get update apt-get install -y apt-transport-https ca-certificates curl gpg
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
      sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
      sudo apt-get update -y
      sudo apt-get install kubelet kubeadm -y

  - name: Install kubelet in controlplane
    shell: sudo apt-get install kubectl -y

  - name: To intialise cluster(Master Node)
    shell: kubeadm init --pod-network-cidr=192.168.0.0/16

  - name: Genearte join command in master
    shell: sudo kubeadm token create --print-join-command
    register: join_output

  - name: show join command output
    set_fact:
      join_command: "{{ join_output.stdout }}"

  - name: configure kubectl access
    shell: |
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config

  - name: Install cni plugin
    shell: |
      kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/tigera-operator.yaml
      kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/custom-resources.yaml
###################################
#Worker nodes k8s install
###################################
- name: Deploying k8s in worker node
  hosts: workers
  become: yes
  gather_facts: false    
  tasks:
  - name: Set hostname to identify
    shell: |
      hostnamectl set-hostname worker
	
  - name: Disable swap
    shell: swapoff -a
	
  - name: enable ip packet forwarding
    shell: |
      echo "net.ipv4.ip_forward = 1" | sudo tee /etc/sysctl.d/k8s.conf
      sysctl --system
  - name: Update the system
    shell: sudo apt update && apt upgrade -y
	
  - name: Install containerd 
    shell: sudo apt-get install containerd
	
  - name: Install cni plugin 
    shell: |
      mkdir -p /opt/cni/bin
      wget https://github.com/containernetworking/plugins/releases/download/v1.7.1/cni-plugins-linux-amd64-v1.7.1.tgz
      tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.7.1.tgz
	    
  - name: configure containerd
    shell: |
      mkdir /etc/containerd
      containerd config default > /etc/containerd/config.toml
      sed -i 's/^SystemdCgroup *= *false/SystemdCgroup = true/' /etc/containerd/config.toml
      systemctl restart containerd
	  
  - name: To add k8s repos and install tools
    shell: |
      sudo apt-get update apt-get install -y apt-transport-https ca-certificates curl gpg
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
      sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
      sudo apt-get update -y
      sudo apt-get install kubelet kubeadm -y
	  
  - name: To join to master node
    shell: "{{ join_command.stdout }}"
