#Master nodes k8s install
- name: Deploying k8s in Master node
  hosts: master
  become: yes
  gather_facts: true
  tasks:
    - name: Set hostname to identify
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
      ignore_errors: true
    - name: Debug inventory_hostname
      debug:
        msg: "Current hostname is {{ inventory_hostname }}"

    - name: Disable swap
      shell: swapoff -a
    - name: enable ip packet forwarding
      shell: |
        echo "net.ipv4.ip_forward = 1" | sudo tee /etc/sysctl.d/k8s.conf
        sysctl --system
      args:
        creates: /etc/sysctl.d/k8s.conf
    - name: Update the system
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd
        state: present
    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started

    - name: To add k8s repos and install tools
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        chmod 644 /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Install kubelet and kubeadm and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
    - name: Hold kubelet, kubeadm, and kubectl
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Initialize Kubernetes cluster
      shell: kubeadm init --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
    - name: Wait for Kubernetes API to become responsive
      shell: |
        kubectl version --kubeconfig=/etc/kubernetes/admin.conf
      register: result
      retries: 10
      delay: 15
      until: result.rc == 0
    - name: Genearte join command in master
      shell: sudo kubeadm token create --print-join-command
      register: join_output

    - name: show join command output
      set_fact:
        join_command: "{{ join_output.stdout }}"

    - name: configure kubectl access
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        creates: /root/.kube/config

    - name: Install  Calico networking manifest for the Kubernetes.
      shell: curl -sSL https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/calico.yaml -o /root/calico.yaml
      args:
        creates: /root/calico.yaml
      register: calico_installation_check

    - name: Apply Calico manifest
      shell: kubectl apply -f calico.yaml
      when: calico_installation_check.rc != 0

#Worker nodes k8s install
- name: Deploying k8s in worker node
  hosts: workers
  become: yes
  gather_facts: true
  tasks:
    - name: Set hostname to identify
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"
      ignore_errors: true
    - name: Debug inventory_hostname
      debug:
        msg: "Current hostname is {{ inventory_hostname }}"

    - name: Disable swap
      shell: swapoff -a
    - name: enable ip packet forwarding
      shell: |
        echo "net.ipv4.ip_forward = 1" | sudo tee /etc/sysctl.d/k8s.conf
        sysctl --system
      args:
        creates: /etc/sysctl.d/k8s.conf
    - name: Update the system
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
       name: containerd
       state: present
    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started

    - name: To add k8s repos and install tools
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
        chmod 644 /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Install kubelet and kubeadm
      apt:
        name:
          - kubelet
          - kubeadm
        state: present
        update_cache: yes
    - name: Enable and start kubelet
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Check if node already joined the cluster
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf_check

    - name: Join to master node
      shell: "{{ hostvars[groups['master'][0]].join_command }}"
      when: not kubelet_conf_check.stat.exists
